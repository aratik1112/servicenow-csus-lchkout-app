<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_casus_laptop_checkout_table</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_casus_laptop_checkout_table">checkout_timeISNOTEMPTY^return_timeISNOTEMPTY^EQ<item endquery="false" field="checkout_time" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="return_time" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Renewal of a laptop</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	if (current.state=='Checked Out'){ //if the current state is closed complete just exit
		return;
	}
	var dt2 = new GlideRecord('x_casus_laptop_default_device_times');
//	gs.addInfoMessage("device time is "+current.device_name.device_type.default_time.dateNumericValue());
//	gs.addInfoMessage("checkout time is "+current.checkout_time.dateNumericValue());
	var t2 = current.checkout_time.dateNumericValue()+current.device_name.device_type.default_time.dateNumericValue();
//	gs.addInfoMessage("t is "+t.toPrecision(13));
	var end = new GlideDateTime();
//	gs.addInfoMessage("end is "+end.toString());
	end.addSeconds(current.device_name.device_type.default_time.dateNumericValue()/1000);
//	end.setValue(t.toPrecision(13));
//	end.setNumericValue(t.toPrecision(13)/1000);
//	gs.addInfoMessage(end.getNumericValue());
		//current.return_time.setNermericValue(current.checkout_time.dateNumericValue()+current.device_name.device_type.default_time.dateNumericValue());
	current.return_time.setDateNumericValue(end.getNumericValue());
//	current.return_time.setInitialValue(end.getNumericValue());
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>bhuvanbhatia</sys_created_by>
        <sys_created_on>2017-02-13 22:00:44</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>1065ee2b0f74b20012e4348ce1050eb2</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Renewal of a laptop</sys_name>
        <sys_overrides/>
        <sys_package display_value="Laptop Checkout" source="x_casus_laptop">ba205f426f7a2a00ad6cd4a21c3ee477</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Laptop Checkout">ba205f426f7a2a00ad6cd4a21c3ee477</sys_scope>
        <sys_update_name>sys_script_1065ee2b0f74b20012e4348ce1050eb2</sys_update_name>
        <sys_updated_by>bhuvanbhatia</sys_updated_by>
        <sys_updated_on>2017-02-13 22:15:37</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
