<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_casus_laptop_checkout_table</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_casus_laptop_checkout_table">state=Confirming^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="Confirming"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message><![CDATA[<p>testing add message function</p>]]></message>
        <name>check availability</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	//gs.addInfoMessage("before utils");
	var CU = new CheckoutUtils();
	//gs.addInfoMessage(CU.checkAvailabilityofDevice(current.device_id));
	
	if (!CU.checkAvailabilityofDevice(current.getValue("device_name"))){
		//gs.addInfoMessage("false");
		gs.addErrorMessage("This device is unavailable.");
		current.setAbortAction(true);
		
	} else{
//		gs.addInfoMessage("true");  //debugging code
		var gr = new GlideRecord('x_casus_laptop_devices_table');
		gr.addQuery('device_id',current.getValue("device_name"));
		//gr.addQuery("availability","available");
		gr.query();
		gr.next();
//		gs.addInfoMessage("availability = "+gr.getValue("availability")); //debugging code
		gr.availability = 3;
//		gs.addInfoMessage(gr.getValue("availability"));  //debugging code
		//gr.setValue("availability",3);
		//gs.addInfoMessage(gr.getValue("availability"));  //debugging code
		gr.update("update based on checkout");
		//gs.addErrorMessage("Should have change availability"); //debugging code
	}
	//gs.addInfoMessage("end");
	// Add your code here

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>msn73</sys_created_by>
        <sys_created_on>2016-11-08 20:17:31</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>f04966d40f47620012e4348ce1050ed6</sys_id>
        <sys_mod_count>53</sys_mod_count>
        <sys_name>check availability</sys_name>
        <sys_overrides/>
        <sys_package display_value="Laptop Checkout" source="x_casus_laptop">ba205f426f7a2a00ad6cd4a21c3ee477</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Laptop Checkout">ba205f426f7a2a00ad6cd4a21c3ee477</sys_scope>
        <sys_update_name>sys_script_f04966d40f47620012e4348ce1050ed6</sys_update_name>
        <sys_updated_by>hedge</sys_updated_by>
        <sys_updated_on>2017-03-06 21:00:03</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
